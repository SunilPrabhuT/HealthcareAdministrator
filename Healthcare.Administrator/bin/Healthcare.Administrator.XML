<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Healthcare.Administrator</name>
    </assembly>
    <members>
        <member name="M:Healthcare.Administrator.SwaggerConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Register Method
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.SwaggerConfig.GetXmlCommentsPath">
            <summary>
            Gets the XmlPath
            </summary>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Infrastructure.ApplicationDbContext">
            <inheritdoc />
            <summary>
            Application Db Context class
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Infrastructure.ApplicationDbContext.#ctor">
            <inheritdoc />
            <summary>
            The context class
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Infrastructure.ApplicationDbContext.Create">
            <summary>
            Creates the context 
            </summary>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Infrastructure.ApplicationUser">
            <inheritdoc />
            <summary>
            ApplicationUser  model class
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.FirstName">
            <summary>
            The FirstName property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.LastName">
            <summary>
            The LastName property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.Title">
            <summary>
            The Title property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.Facility">
            <summary>
            The Location property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.CreatedDate">
            <summary>
            The CreatedDate property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.CreatedBy">
            <summary>
            The FirstName property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.ModifiedDate">
            <summary>
            The ModifiedDate property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.ModifiedBy">
            <summary>
            The ModifiedBy property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.IsActive">
            <summary>
            The IsActive property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.IschangePasswordRequired">
            <summary>
            IschangePasswordRequired Property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.PasswordResetToken">
            <summary>
            The Token property
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Infrastructure.ApplicationUser.PasswordExpirationTime">
            <summary>
            The Token property
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Infrastructure.ApplicationUser.GenerateUserIdentityAsync(Microsoft.AspNet.Identity.UserManager{Healthcare.Administrator.Infrastructure.ApplicationUser},System.String)">
            <summary>
            Generates the user schema in Db
            </summary>
            <param name="manager"></param>
            <param name="authenticationType"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Infrastructure.ApplicationUserManager">
            <inheritdoc />
            <summary>
            ApplicationUserManager to create
            the user in DB
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Infrastructure.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{Healthcare.Administrator.Infrastructure.ApplicationUser})">
            <summary>
            Injects IUserStore
            </summary>
            <param name="store"></param>
        </member>
        <member name="M:Healthcare.Administrator.Infrastructure.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{Healthcare.Administrator.Infrastructure.ApplicationUserManager},Microsoft.Owin.IOwinContext)">
            <summary>
            Creates the User table in Db
            </summary>
            <param name="options"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Providers.CustomJwtFormat">
            <summary>
            CustomJwtFormat class
            Generates the Token by validating
            the username and password
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Providers.CustomJwtFormat._issuer">
            <summary>
            The _issuer field
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Providers.CustomJwtFormat.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="issuer"></param>
        </member>
        <member name="M:Healthcare.Administrator.Providers.CustomJwtFormat.Protect(Microsoft.Owin.Security.AuthenticationTicket)">
            <summary>
            Issues the token by validating
            the user and password and validating
            the role assigned to the user
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.Providers.CustomJwtFormat.Unprotect(System.String)">
            <summary>
            Unprotects the token
            </summary>
            <param name="protectedText"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Providers.CustomOAuthProvider">
            <inheritdoc />
            <summary>
            CustomAuthProvider Class
            Validates the context and
            generates the token
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Providers.CustomOAuthProvider.ValidateClientAuthentication(Microsoft.Owin.Security.OAuth.OAuthValidateClientAuthenticationContext)">
            <summary>
            Validates the Authentication
            </summary>
            <param name="context"></param>
            <returns />
        </member>
        <member name="M:Healthcare.Administrator.Providers.CustomOAuthProvider.GrantResourceOwnerCredentials(Microsoft.Owin.Security.OAuth.OAuthGrantResourceOwnerCredentialsContext)">
            <summary>
            Gets the Resource ownership of
            the user by validating the credentials
            </summary>
            <param name="context" />
            <returns />
        </member>
        <member name="T:Healthcare.Administrator.Controllers.PatientHealthDataController">
            <summary>
            User Controller
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Controllers.PatientHealthDataController.GetPatientData">
            <summary>
            Gets the Patient Data
            </summary>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Controllers.UserController">
            <summary>
            User Controller
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Controllers.UserController.GetUsername(System.String)">
            <summary>
            Gets the Username
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Interface.IBaseRepository`1">
            <summary>
            Interface IBaseRepository
            </summary>
            <typeparam name="TEntity">The type of the t entity.</typeparam>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.GetById(System.Object)">
            <summary>
            Gets the record By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.Insert(`0)">
            <summary>
            Insert the record to db
            based on the entity
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.Delete(System.Object)">
            <summary>
            Delete the record from db
            By matching the id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.Delete(`0)">
            <summary>
            Delete the record from db
            based on entity
            </summary>
            <param name="entityToDelete"></param>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.Update(`0)">
            <summary>
            Updates the record based on the entity
            </summary>
            <param name="entityToUpdate"></param>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IBaseRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <summary>
            Gets the record based on the filter
            criteria
            </summary>
            <param name="filter"></param>
            <param name="orderBy"></param>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Interface.IUnitOfWork">
            <summary>
            IUnitOfWork interface
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Interface.IUnitOfWork.PatientPopulationDataRepository">
            <summary>
            The user respository
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Interface.IUnitOfWork.Save">
            <summary>
            Saves the record to Db
            </summary>
        </member>
        <member name="T:Healthcare.Administrator.Service.SmartChefRepository`1">
            <summary>
            Base Repository
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="F:Healthcare.Administrator.Service.SmartChefRepository`1.context">
            <summary>
            The CascadeDbContext variable
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Service.SmartChefRepository`1.dbSet">
            <summary>
            The dbSet variable
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.#ctor(Healthcare.Administrator.DAL.Model.SmartChefDbContext)">
            <summary>
            Constructor
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Get(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.String)">
            <summary>
            Generic function to get all the
            matching records as per filter criteria
            </summary>
            <param name="filter"></param>
            <param name="orderBy"></param>
            <param name="includeProperties"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.GetById(System.Object)">
            <summary>
            Generic function to get the
            matching records By Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Insert(`0)">
            <summary>
            Generic function to get insert the
            record to the db
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Delete(System.Object)">
            <summary>
            Generic function to delete the
            record from db by matching the Id
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Delete(`0)">
            <summary>
            Generic function to delete the
            record from db by matching the entity
            </summary>
            <param name="entityToDelete"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Update(`0)">
            <summary>
            Generic function to update the
            record from db by matching the entity
            </summary>
            <param name="entityToUpdate"></param>
        </member>
        <member name="F:Healthcare.Administrator.Service.SmartChefRepository`1.disposed">
            <summary>
            The disposes variable
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Dispose(System.Boolean)">
            <summary>
            Disposes the entity
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.SmartChefRepository`1.Dispose">
            <summary>
            The disposes variable
            by suppressing the finalize
            </summary>
        </member>
        <member name="T:Healthcare.Administrator.Service.UnitOfWork">
            <summary>
            UnitOfWork Class responsible for creating the 
            repositories for Db tables and inserting updating 
            the records to the DB 
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Service.UnitOfWork._dbContext">
            <summary>
            CascadeDb context
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Service.UnitOfWork._patientPopulationData">
            <summary>
            Variable for Audit repository
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Service.UnitOfWork.Save">
            <inheritdoc />
            <summary>
            This method will 
            insert/update
            the entries to the Db
            </summary>
        </member>
        <member name="P:Healthcare.Administrator.Service.UnitOfWork.PatientPopulationDataRepository">
            <inheritdoc />
            <summary>
             Repository for OrderFormType
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Service.UnitOfWork.Dispose(System.Boolean)">
            <summary>
            Disposes the object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Healthcare.Administrator.Service.UnitOfWork.Dispose">
            <summary>
            Disposes the Object By
            Supressing the Finalize 
            </summary>
        </member>
        <member name="T:Healthcare.Administrator.Startup">
            <summary>
            Start Up class for the Web Api
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Startup.Configuration(Owin.IAppBuilder)">
            <summary>
            Configuration Details of the application
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Healthcare.Administrator.Startup.ConfigureOAuthTokenGeneration(Owin.IAppBuilder)">
            <summary>
            Configuration for OAuth Token generation
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Healthcare.Administrator.Startup.ConfigureOAuthTokenConsumption(Owin.IAppBuilder)">
            <summary>
            Configuration for OAuth Consumption
            </summary>
            <param name="app"></param>
        </member>
        <member name="M:Healthcare.Administrator.Startup.ConfigureWebApi(System.Web.Http.HttpConfiguration)">
            <summary>
            Configures the Webapi and Unity container resolve
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Healthcare.Administrator.Startup.DependancyResolve(System.Web.Http.HttpConfiguration)">
            <summary>
            Resolves the Dependancy at runtime
            </summary>
        </member>
        <member name="T:Healthcare.Administrator.UnityResolver">
            <inheritdoc />
            <summary>
            The UnityResolver class
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.UnityResolver._container">
            <summary>
            The variable for container
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.#ctor(Unity.IUnityContainer)">
            <summary>
            The Unity Resolver
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.GetService(System.Type)">
            <summary>
            The Get service 
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.GetServices(System.Type)">
            <summary>
            The Get Services
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.BeginScope">
            <summary>
            The Begin scope
            </summary>
            <returns></returns>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.Dispose">
            <summary>
            Disponses the object
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.UnityResolver.Dispose(System.Boolean)">
            <summary>
            disposes the object
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:Healthcare.Administrator.Utility.CheckModelForNullAttributeFilter">
            <inheritdoc />
            <summary>
            Model Validation Filter
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Utility.CheckModelForNullAttributeFilter._validate">
            <summary>
            The dictionary variable
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Utility.CheckModelForNullAttributeFilter.#ctor">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Utility.CheckModelForNullAttributeFilter.#ctor(System.Func{System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean})">
            <inheritdoc />
            <summary>
            Constructor
            </summary>
            <param name="checkCondition"></param>
        </member>
        <member name="M:Healthcare.Administrator.Utility.CheckModelForNullAttributeFilter.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <inheritdoc />
            <summary>
            </summary>
            <param name="actionContext"></param>
        </member>
        <member name="F:Healthcare.Administrator.Utility.Constants.AuthHeader">
            <summary>
            The Authorization Header Error String
            </summary>
        </member>
        <member name="F:Healthcare.Administrator.Utility.Constants.ErrorMessage">
            <summary>
            The ErrorMessage string
            </summary>
        </member>
        <member name="T:Healthcare.Administrator.Utility.HealthcareAdministratorExceptionHandlerFilter">
            <summary>
            Exception Handler
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Utility.HealthcareAdministratorExceptionHandlerFilter.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            This method handles exception occurred in the api
            </summary>
            <param name="context"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:Healthcare.Administrator.Utility.SwaggerHeaderFilter">
            <summary>
            Swagger Header Filetr for Implementing Header Value from Swagger UI
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Healthcare.Administrator.Utility.SwaggerHeaderFilter.Apply(Swashbuckle.Swagger.Operation,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.ApiDescription)">
            <summary>
            
            </summary>
            <param name="operation"></param>
            <param name="schemaRegistry"></param>
            <param name="apiDescription"></param>
            <remarks></remarks>
        </member>
        <member name="T:Healthcare.Administrator.Utility.ValidateModelStateAttributeFilter">
            <inheritdoc />
            <summary>
            Validtes the Model in the request
            </summary>
        </member>
        <member name="M:Healthcare.Administrator.Utility.ValidateModelStateAttributeFilter.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
            <inheritdoc />
            <summary>
            Validates the Model
            </summary>
            <param name="actionContext"></param>
        </member>
    </members>
</doc>
